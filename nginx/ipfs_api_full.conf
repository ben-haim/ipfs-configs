limit_req_zone $binary_remote_addr zone=one:10m rate=30r/m;

server {

listen 80 default_server;
        listen [::]:80 default_server;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout       8000;
        proxy_send_timeout          8000;
        proxy_read_timeout          8000;
        send_timeout                8000;

        #----------------------------
        limit_req zone=one;
        #----------------------------

        location  ~ ^/api/v0/files/(write|stat)
        {
            # Upload size
            client_max_body_size 10K;

            if ($arg_arg = '') { return 400; }

            access_by_lua_block
            {
                 local table = ngx.req.get_uri_args();
                 table.arg = table.arg:gsub("%s+", "");
                 ngx.say(table.arg);

                 if string.match(table.arg, "%.%.") or string.len(table.arg) > 80  then
                     ngx.status = 400
                     ngx.say("Invalid path param.");
                     return ngx.exit(400)
                 end

                 table.arg = "/private/" .. table.arg;
                 ngx.req.set_uri_args(table);
            }

            proxy_pass  http://ipfs-api$uri$is_args$args;
        }

        #-----------------------------
        location  /api/v0/key/gen
        {
            if ($arg_arg = '')
            {
                return 403;
            }
            access_by_lua_block {

                 local table = ngx.req.get_uri_args();
                 table.type = "rsa";
                 table.arg = "ck_" .. table.arg;
                 ngx.req.set_uri_args(table);
            }

            proxy_pass  http://ipfs-api$uri$is_args$args;
        }

        #------------------------------
        location  /api/v0/name/publish
        {
            if ($arg_arg = '')
            {
                return 403;
            }

            if ($arg_key = '')
            {
                return 403;
            }

            if ($arg_key ~* 'self')
            {
                return 403;
            }

            access_by_lua_block {
                 local table = ngx.req.get_uri_args();
                 table.lifetime = "8760h";
                 table.key = "ck_" .. table.key;
                 ngx.req.set_uri_args(table);
            }

            proxy_pass  http://ipfs-api$uri$is_args$args;
        }
}
